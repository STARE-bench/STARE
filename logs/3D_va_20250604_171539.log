phoenix-srun: job 5092442 queued and waiting for resources
phoenix-srun: job 5092442 has been allocated resources
phoenix-srun: Job 5092442 scheduled successfully!
Current QUOTA_TYPE is [reserved], which means the job has occupied quota in RESERVED_TOTAL under your partition.
Current PHX_PRIORITY is normal

[root] Loading dataset /mnt/petrelfs/gujiawei/stare_bench/release_stare/stare.jsonl, category: ['3D_va']
[root] Loading local JSONL file: /mnt/petrelfs/gujiawei/stare_bench/release_stare/stare.jsonl
[root] Loading config
[root] Loading local model /mnt/petrelfs/share_data/songmingyang/model/mm/Qwen2-VL-2B-Instruct
[2025-06-04 17:15:55,003] [INFO] [real_accelerator.py:158:get_accelerator] Setting ds_accelerator to cuda (auto detect)
[qwen_vl_utils.vision_process] set VIDEO_TOTAL_PIXELS: 90316800
Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s]Loading checkpoint shards:  50%|█████     | 1/2 [00:05<00:05,  5.17s/it]Loading checkpoint shards: 100%|██████████| 2/2 [00:06<00:00,  2.90s/it]Loading checkpoint shards: 100%|██████████| 2/2 [00:06<00:00,  3.24s/it]
Using a slow image processor as `use_fast` is unset and a slow processor was saved with this model. `use_fast=True` will be the default behavior in v4.52, even if the model was saved with a slow processor. This will result in minor differences in outputs. You'll still be able to use a slow processor with `use_fast=False`.
[root] Model loaded!
[root] Results already exists.
[root] Reading /mnt/petrelfs/gujiawei/stare_bench/release_stare/stare-bench/results/stare_3D_va_direct.json
[root] Starting to generate.....
  0%|          | 0/306 [00:00<?, ?it/s]  0%|          | 1/306 [00:12<1:06:03, 13.00s/it]  1%|          | 2/306 [00:17<39:17,  7.75s/it]  [root] Save results to /mnt/petrelfs/gujiawei/stare_bench/release_stare/stare-bench/results/stare_3D_va_direct.json
  1%|          | 3/306 [00:21<30:27,  6.03s/it]  1%|▏         | 4/306 [00:24<25:56,  5.15s/it]  2%|▏         | 5/306 [00:28<23:07,  4.61s/it]  2%|▏         | 6/306 [00:32<22:10,  4.44s/it]  2%|▏         | 7/306 [00:36<20:54,  4.20s/it]  3%|▎         | 8/306 [00:39<19:57,  4.02s/it]  3%|▎         | 9/306 [00:43<19:19,  3.90s/it]  3%|▎         | 10/306 [00:47<18:47,  3.81s/it][root] Save results to /mnt/petrelfs/gujiawei/stare_bench/release_stare/stare-bench/results/stare_3D_va_direct.json
CUDA out of memory. Tried to allocate 127.81 GiB. GPU 0 has a total capacty of 79.32 GiB of which 63.75 GiB is free. Including non-PyTorch memory, this process has 15.57 GiB memory in use. Of the allocated memory 13.77 GiB is allocated by PyTorch, and 170.34 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
CUDA out of memory. Tried to allocate 127.81 GiB. GPU 0 has a total capacty of 79.32 GiB of which 56.07 GiB is free. Including non-PyTorch memory, this process has 23.25 GiB memory in use. Of the allocated memory 13.77 GiB is allocated by PyTorch, and 7.84 GiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
CUDA out of memory. Tried to allocate 127.81 GiB. GPU 0 has a total capacty of 79.32 GiB of which 56.07 GiB is free. Including non-PyTorch memory, this process has 23.25 GiB memory in use. Of the allocated memory 13.77 GiB is allocated by PyTorch, and 7.84 GiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
CUDA out of memory. Tried to allocate 127.81 GiB. GPU 0 has a total capacty of 79.32 GiB of which 56.07 GiB is free. Including non-PyTorch memory, this process has 23.25 GiB memory in use. Of the allocated memory 13.77 GiB is allocated by PyTorch, and 7.84 GiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
CUDA out of memory. Tried to allocate 127.81 GiB. GPU 0 has a total capacty of 79.32 GiB of which 56.07 GiB is free. Including non-PyTorch memory, this process has 23.25 GiB memory in use. Of the allocated memory 13.77 GiB is allocated by PyTorch, and 7.84 GiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
CUDA out of memory. Tried to allocate 127.81 GiB. GPU 0 has a total capacty of 79.32 GiB of which 56.07 GiB is free. Including non-PyTorch memory, this process has 23.25 GiB memory in use. Of the allocated memory 13.77 GiB is allocated by PyTorch, and 7.84 GiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
CUDA out of memory. Tried to allocate 127.81 GiB. GPU 0 has a total capacty of 79.32 GiB of which 56.07 GiB is free. Including non-PyTorch memory, this process has 23.25 GiB memory in use. Of the allocated memory 13.77 GiB is allocated by PyTorch, and 7.84 GiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
CUDA out of memory. Tried to allocate 127.81 GiB. GPU 0 has a total capacty of 79.32 GiB of which 56.07 GiB is free. Including non-PyTorch memory, this process has 23.25 GiB memory in use. Of the allocated memory 13.77 GiB is allocated by PyTorch, and 7.84 GiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
CUDA out of memory. Tried to allocate 127.81 GiB. GPU 0 has a total capacty of 79.32 GiB of which 56.07 GiB is free. Including non-PyTorch memory, this process has 23.25 GiB memory in use. Of the allocated memory 13.77 GiB is allocated by PyTorch, and 7.84 GiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
CUDA out of memory. Tried to allocate 127.81 GiB. GPU 0 has a total capacty of 79.32 GiB of which 56.07 GiB is free. Including non-PyTorch memory, this process has 23.25 GiB memory in use. Of the allocated memory 13.77 GiB is allocated by PyTorch, and 7.84 GiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
CUDA out of memory. Tried to allocate 127.81 GiB. GPU 0 has a total capacty of 79.32 GiB of which 56.07 GiB is free. Including non-PyTorch memory, this process has 23.25 GiB memory in use. Of the allocated memory 13.77 GiB is allocated by PyTorch, and 7.84 GiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
CUDA out of memory. Tried to allocate 127.81 GiB. GPU 0 has a total capacty of 79.32 GiB of which 56.07 GiB is free. Including non-PyTorch memory, this process has 23.25 GiB memory in use. Of the allocated memory 13.77 GiB is allocated by PyTorch, and 7.84 GiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
CUDA out of memory. Tried to allocate 127.81 GiB. GPU 0 has a total capacty of 79.32 GiB of which 56.07 GiB is free. Including non-PyTorch memory, this process has 23.25 GiB memory in use. Of the allocated memory 13.77 GiB is allocated by PyTorch, and 7.84 GiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
CUDA out of memory. Tried to allocate 127.81 GiB. GPU 0 has a total capacty of 79.32 GiB of which 56.07 GiB is free. Including non-PyTorch memory, this process has 23.25 GiB memory in use. Of the allocated memory 13.77 GiB is allocated by PyTorch, and 7.84 GiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
CUDA out of memory. Tried to allocate 127.81 GiB. GPU 0 has a total capacty of 79.32 GiB of which 56.07 GiB is free. Including non-PyTorch memory, this process has 23.25 GiB memory in use. Of the allocated memory 13.77 GiB is allocated by PyTorch, and 7.84 GiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
CUDA out of memory. Tried to allocate 127.81 GiB. GPU 0 has a total capacty of 79.32 GiB of which 56.07 GiB is free. Including non-PyTorch memory, this process has 23.25 GiB memory in use. Of the allocated memory 13.77 GiB is allocated by PyTorch, and 7.84 GiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
CUDA out of memory. Tried to allocate 127.81 GiB. GPU 0 has a total capacty of 79.32 GiB of which 56.07 GiB is free. Including non-PyTorch memory, this process has 23.25 GiB memory in use. Of the allocated memory 13.77 GiB is allocated by PyTorch, and 7.84 GiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
  4%|▎         | 11/306 [00:51<19:10,  3.90s/it]  4%|▍         | 12/306 [00:55<19:03,  3.89s/it]  4%|▍         | 13/306 [00:58<18:44,  3.84s/it]  5%|▍         | 14/306 [01:02<18:36,  3.82s/it]  5%|▍         | 15/306 [01:06<18:43,  3.86s/it]  5%|▌         | 16/306 [01:10<18:22,  3.80s/it]  6%|▌         | 17/306 [01:14<18:40,  3.88s/it]  6%|▌         | 18/306 [01:18<18:17,  3.81s/it]  6%|▌         | 19/306 [01:21<18:15,  3.82s/it]  7%|▋         | 20/306 [01:25<18:35,  3.90s/it][root] Save results to /mnt/petrelfs/gujiawei/stare_bench/release_stare/stare-bench/results/stare_3D_va_direct.json
  7%|▋         | 21/306 [01:29<18:00,  3.79s/it]  7%|▋         | 22/306 [01:33<17:48,  3.76s/it]  8%|▊         | 23/306 [01:36<17:42,  3.75s/it]  8%|▊         | 24/306 [01:41<18:09,  3.86s/it]  8%|▊         | 25/306 [01:44<17:47,  3.80s/it]  8%|▊         | 26/306 [01:48<17:45,  3.81s/it]  9%|▉         | 27/306 [01:52<18:15,  3.93s/it]  9%|▉         | 28/306 [01:56<18:28,  3.99s/it]  9%|▉         | 29/306 [02:00<18:21,  3.98s/it] 10%|▉         | 30/306 [02:04<18:01,  3.92s/it][root] Save results to /mnt/petrelfs/gujiawei/stare_bench/release_stare/stare-bench/results/stare_3D_va_direct.json
phoenix-srun: interrupt (one more within 1 sec to abort)
phoenix-srun: StepId=5092442.0 task 0: running
phoenix-srun: sending Ctrl-C to StepId=5092442.0
phoenix-srun: Job step aborted: Waiting up to 2 seconds for job step to finish.
phoenix-srun: Easily find out why your job was killed by following the link below:
	https://docs.phoenix.sensetime.com/FAQ/SlurmFAQ/Find-out-why-my-job-was-killed/
 10%|█         | 31/306 [02:08<17:29,  3.82s/it] 10%|█         | 32/306 [02:12<17:31,  3.84s/it]slurmstepd: error: *** STEP 5092442.0 ON SH-IDCA1404-10-140-54-22 CANCELLED AT 2025-06-04T17:18:31 ***
phoenix-srun: launch/slurm: _step_signal: Terminating StepId=5092442.0
